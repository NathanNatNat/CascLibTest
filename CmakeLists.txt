cmake_minimum_required(VERSION 3.15)
project(CascLibTest)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Check for Python and Jinja2 dependencies needed by GLAD2
find_package(Python3 COMPONENTS Interpreter QUIET)

if(Python3_FOUND)
    message(STATUS "Found Python: ${Python3_EXECUTABLE}")
    
    # Check if Jinja2 is available
    execute_process(
        COMMAND ${Python3_EXECUTABLE} -c "import jinja2; print('Jinja2 available')"
        RESULT_VARIABLE JINJA2_CHECK_RESULT
        OUTPUT_QUIET
        ERROR_QUIET
    )
    
    if(NOT JINJA2_CHECK_RESULT EQUAL 0)
        message(WARNING "Jinja2 not found. GLAD2 may require Jinja2 for template processing.")
        message(WARNING "Install it with: pip install jinja2")
    else()
        message(STATUS "Jinja2 is available")
    endif()
else()
    message(WARNING "Python not found. GLAD2 may require Python and Jinja2 for code generation.")
    message(WARNING "Please install Python 3 and Jinja2 if you encounter build issues.")
endif()

# GLAD
add_subdirectory(external/glad/cmake)
glad_add_library(glad STATIC API gl:core=4.6)

# GLFW
set(GLFW_BUILD_EXAMPLES OFF CACHE INTERNAL "Build the GLFW example programs")
set(GLFW_BUILD_TESTS OFF CACHE INTERNAL "Build the GLFW test programs")
set(GLFW_BUILD_DOCS OFF CACHE INTERNAL "Build the GLFW documentation")
set(GLFW_INSTALL OFF CACHE INTERNAL "Generate installation target")
add_subdirectory(external/glfw)
include_directories(external/glfw/include)

# CascLib
set(CASC_BUILD_STATIC_LIB ON CACHE BOOL "Force Static library building")
set(CASC_BUILD_SHARED_LIB OFF CACHE BOOL "Compile dynamically linked library")
add_subdirectory(external/CascLib)
include_directories(external/CascLib/src)

# ImGui
set(IMGUI_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui)
set(IMGUI_BACKEND_DIR ${IMGUI_DIR}/backends)
file(GLOB IMGUI_SOURCES
    ${IMGUI_DIR}/*.cpp
    ${IMGUI_BACKEND_DIR}/imgui_impl_glfw.cpp
    ${IMGUI_BACKEND_DIR}/imgui_impl_opengl3.cpp
)
file(GLOB IMGUI_HEADERS
    ${IMGUI_DIR}/*.h
    ${IMGUI_BACKEND_DIR}/imgui_impl_glfw.h
    ${IMGUI_BACKEND_DIR}/imgui_impl_opengl3.h
)
add_library(imgui STATIC ${IMGUI_SOURCES} ${IMGUI_HEADERS})
target_include_directories(imgui PUBLIC ${IMGUI_DIR} ${IMGUI_BACKEND_DIR})

# Add executable for the test project
add_executable(CascLibTest main.cpp)

target_link_libraries(CascLibTest casc_static glfw glad imgui wsock32 ws2_32)
